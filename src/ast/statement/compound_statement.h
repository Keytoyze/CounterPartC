// Generated by buildSrc/GenerateAST.py
#ifndef _COMPOUND_STATEMENT_H_
#define _COMPOUND_STATEMENT_H_

#include "ast/ast.h"
//#header

class CompoundStatement: public BasicAST {
public:
    virtual ~CompoundStatement() {}
    virtual void GenerateIR(Context context) {}
    virtual void Dump(int depth) {}
};

class CompoundStatement1: public CompoundStatement {
public:
    LCurly* lCurlyAst1;
    RCurly* rCurlyAst2;

    CompoundStatement1(
        LCurly* lCurlyAst1,
        RCurly* rCurlyAst2
    ): lCurlyAst1(lCurlyAst1), rCurlyAst2(rCurlyAst2) {}

    virtual ~CompoundStatement1();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};

class CompoundStatement2: public CompoundStatement {
public:
    LCurly* lCurlyAst1;
    StatementList* statementListAst2;
    RCurly* rCurlyAst3;

    CompoundStatement2(
        LCurly* lCurlyAst1,
        StatementList* statementListAst2,
        RCurly* rCurlyAst3
    ): lCurlyAst1(lCurlyAst1), statementListAst2(statementListAst2), rCurlyAst3(rCurlyAst3) {}

    virtual ~CompoundStatement2();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};

class CompoundStatement3: public CompoundStatement {
public:
    LCurly* lCurlyAst1;
    DeclarationList* declarationListAst2;
    RCurly* rCurlyAst3;

    CompoundStatement3(
        LCurly* lCurlyAst1,
        DeclarationList* declarationListAst2,
        RCurly* rCurlyAst3
    ): lCurlyAst1(lCurlyAst1), declarationListAst2(declarationListAst2), rCurlyAst3(rCurlyAst3) {}

    virtual ~CompoundStatement3();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};

class CompoundStatement4: public CompoundStatement {
public:
    LCurly* lCurlyAst1;
    DeclarationList* declarationListAst2;
    StatementList* statementListAst3;
    RCurly* rCurlyAst4;

    CompoundStatement4(
        LCurly* lCurlyAst1,
        DeclarationList* declarationListAst2,
        StatementList* statementListAst3,
        RCurly* rCurlyAst4
    ): lCurlyAst1(lCurlyAst1), declarationListAst2(declarationListAst2), statementListAst3(statementListAst3), rCurlyAst4(rCurlyAst4) {}

    virtual ~CompoundStatement4();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};


#else

#ifndef _CLASS_LCURLY_
#define _CLASS_LCURLY_
class LCurly;
#endif //_CLASS_LCURLY_
#ifndef _CLASS_STATEMENTLIST_
#define _CLASS_STATEMENTLIST_
class StatementList;
#endif //_CLASS_STATEMENTLIST_
#ifndef _CLASS_DECLARATIONLIST_
#define _CLASS_DECLARATIONLIST_
class DeclarationList;
#endif //_CLASS_DECLARATIONLIST_
#ifndef _CLASS_RCURLY_
#define _CLASS_RCURLY_
class RCurly;
#endif //_CLASS_RCURLY_

#endif // _COMPOUND_STATEMENT_H_
