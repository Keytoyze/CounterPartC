// Generated by buildSrc/GenerateAST.py
#include <iostream>
#include "ast/statement/iteration_statement.h"

void IterationStatement1::Dump(int depth) {
    std::cout << "[" << depth << "] " << "IterationStatement1" << std::endl;
    whileAst1->Dump(depth + 1);
    lRoundAst2->Dump(depth + 1);
    expressionAst3->Dump(depth + 1);
    rRoundAst4->Dump(depth + 1);
    statementAst5->Dump(depth + 1);
}

IterationStatement1::~IterationStatement1() {
    delete whileAst1;
    delete lRoundAst2;
    delete expressionAst3;
    delete rRoundAst4;
    delete statementAst5;
}

void IterationStatement2::Dump(int depth) {
    std::cout << "[" << depth << "] " << "IterationStatement2" << std::endl;
    doAst1->Dump(depth + 1);
    statementAst2->Dump(depth + 1);
    whileAst3->Dump(depth + 1);
    lRoundAst4->Dump(depth + 1);
    expressionAst5->Dump(depth + 1);
    rRoundAst6->Dump(depth + 1);
    simicolonSingleAst7->Dump(depth + 1);
}

IterationStatement2::~IterationStatement2() {
    delete doAst1;
    delete statementAst2;
    delete whileAst3;
    delete lRoundAst4;
    delete expressionAst5;
    delete rRoundAst6;
    delete simicolonSingleAst7;
}

void IterationStatement3::Dump(int depth) {
    std::cout << "[" << depth << "] " << "IterationStatement3" << std::endl;
    forAst1->Dump(depth + 1);
    lRoundAst2->Dump(depth + 1);
    expressionStatementAst3->Dump(depth + 1);
    expressionStatementAst4->Dump(depth + 1);
    rRoundAst5->Dump(depth + 1);
    statementAst6->Dump(depth + 1);
}

IterationStatement3::~IterationStatement3() {
    delete forAst1;
    delete lRoundAst2;
    delete expressionStatementAst3;
    delete expressionStatementAst4;
    delete rRoundAst5;
    delete statementAst6;
}

void IterationStatement4::Dump(int depth) {
    std::cout << "[" << depth << "] " << "IterationStatement4" << std::endl;
    forAst1->Dump(depth + 1);
    lRoundAst2->Dump(depth + 1);
    expressionStatementAst3->Dump(depth + 1);
    expressionStatementAst4->Dump(depth + 1);
    expressionAst5->Dump(depth + 1);
    rRoundAst6->Dump(depth + 1);
    statementAst7->Dump(depth + 1);
}

IterationStatement4::~IterationStatement4() {
    delete forAst1;
    delete lRoundAst2;
    delete expressionStatementAst3;
    delete expressionStatementAst4;
    delete expressionAst5;
    delete rRoundAst6;
    delete statementAst7;
}
