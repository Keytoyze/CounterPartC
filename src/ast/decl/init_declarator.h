// Generated by buildSrc/GenerateAST.py
#ifndef _INIT_DECLARATOR_H_
#define _INIT_DECLARATOR_H_

#include "ast/ast.h"
//#header

class InitDeclarator: public BasicAST {
public:
    virtual ~InitDeclarator() {}
    virtual void GenerateIR(Context& context) {}
    virtual void Dump(int depth) {}
};

class InitDeclarator1: public InitDeclarator {
public:
    Declarator* declaratorAst1;

    InitDeclarator1(
        Declarator* declaratorAst1
    ): declaratorAst1(declaratorAst1) {}

    virtual ~InitDeclarator1();
    virtual void GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class InitDeclarator2: public InitDeclarator {
public:
    Declarator* declaratorAst1;
    Eq* eqAst2;
    Initializer* initializerAst3;

    InitDeclarator2(
        Declarator* declaratorAst1,
        Eq* eqAst2,
        Initializer* initializerAst3
    ): declaratorAst1(declaratorAst1), eqAst2(eqAst2), initializerAst3(initializerAst3) {}

    virtual ~InitDeclarator2();
    virtual void GenerateIR(Context& context);
    virtual void Dump(int depth);

};


#else

#ifndef _CLASS_EQ_
#define _CLASS_EQ_
class Eq;
#endif //_CLASS_EQ_
#ifndef _CLASS_DECLARATOR_
#define _CLASS_DECLARATOR_
class Declarator;
#endif //_CLASS_DECLARATOR_
#ifndef _CLASS_INITIALIZER_
#define _CLASS_INITIALIZER_
class Initializer;
#endif //_CLASS_INITIALIZER_

#endif // _INIT_DECLARATOR_H_
