// Generated by buildSrc/GenerateAST.py
#ifndef _ENUMERATOR_H_
#define _ENUMERATOR_H_

//#include "ast/ast.h"
class ConstantExpression;
class Eq;
class Identifier;

class Enumerator: public BasicAST {
public:
    virtual ~Enumerator() {}
    virtual IRValuePtr GenerateIR(Context& context) { return nullptr; }
    virtual void Dump(int depth) {}
};

class Enumerator1: public Enumerator {
public:
    Identifier* identifierAst1;

    Enumerator1(
        Identifier* identifierAst1
    ): identifierAst1(identifierAst1) {}

    virtual ~Enumerator1();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class Enumerator2: public Enumerator {
public:
    Identifier* identifierAst1;
    Eq* eqAst2;
    ConstantExpression* constantExpressionAst3;

    Enumerator2(
        Identifier* identifierAst1,
        Eq* eqAst2,
        ConstantExpression* constantExpressionAst3
    ): identifierAst1(identifierAst1), eqAst2(eqAst2), constantExpressionAst3(constantExpressionAst3) {}

    virtual ~Enumerator2();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

#endif // _ENUMERATOR_H_
