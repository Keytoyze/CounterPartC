// Generated by buildSrc/GenerateAST.py
#include <iostream>
#include "ast/ast.h"

void DirectAbstractDeclarator1::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator1" << std::endl;
    lRoundAst1->Dump(depth + 1);
    abstractDeclaratorAst2->Dump(depth + 1);
    rRoundAst3->Dump(depth + 1);
}

DirectAbstractDeclarator1::~DirectAbstractDeclarator1() {
    delete lRoundAst1;
    delete abstractDeclaratorAst2;
    delete rRoundAst3;
}

void DirectAbstractDeclarator2::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator2" << std::endl;
    lSquareAst1->Dump(depth + 1);
    rSquareAst2->Dump(depth + 1);
}

DirectAbstractDeclarator2::~DirectAbstractDeclarator2() {
    delete lSquareAst1;
    delete rSquareAst2;
}

void DirectAbstractDeclarator3::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator3" << std::endl;
    lSquareAst1->Dump(depth + 1);
    constantExpressionAst2->Dump(depth + 1);
    rSquareAst3->Dump(depth + 1);
}

DirectAbstractDeclarator3::~DirectAbstractDeclarator3() {
    delete lSquareAst1;
    delete constantExpressionAst2;
    delete rSquareAst3;
}

void DirectAbstractDeclarator4::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator4" << std::endl;
    directAbstractDeclaratorAst1->Dump(depth + 1);
    lSquareAst2->Dump(depth + 1);
    rSquareAst3->Dump(depth + 1);
}

DirectAbstractDeclarator4::~DirectAbstractDeclarator4() {
    delete directAbstractDeclaratorAst1;
    delete lSquareAst2;
    delete rSquareAst3;
}

void DirectAbstractDeclarator5::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator5" << std::endl;
    directAbstractDeclaratorAst1->Dump(depth + 1);
    lSquareAst2->Dump(depth + 1);
    constantExpressionAst3->Dump(depth + 1);
    rSquareAst4->Dump(depth + 1);
}

DirectAbstractDeclarator5::~DirectAbstractDeclarator5() {
    delete directAbstractDeclaratorAst1;
    delete lSquareAst2;
    delete constantExpressionAst3;
    delete rSquareAst4;
}

void DirectAbstractDeclarator6::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator6" << std::endl;
    lRoundAst1->Dump(depth + 1);
    rRoundAst2->Dump(depth + 1);
}

DirectAbstractDeclarator6::~DirectAbstractDeclarator6() {
    delete lRoundAst1;
    delete rRoundAst2;
}

void DirectAbstractDeclarator7::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator7" << std::endl;
    lRoundAst1->Dump(depth + 1);
    parameterTypeListAst2->Dump(depth + 1);
    rRoundAst3->Dump(depth + 1);
}

DirectAbstractDeclarator7::~DirectAbstractDeclarator7() {
    delete lRoundAst1;
    delete parameterTypeListAst2;
    delete rRoundAst3;
}

void DirectAbstractDeclarator8::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator8" << std::endl;
    directAbstractDeclaratorAst1->Dump(depth + 1);
    lRoundAst2->Dump(depth + 1);
    rRoundAst3->Dump(depth + 1);
}

DirectAbstractDeclarator8::~DirectAbstractDeclarator8() {
    delete directAbstractDeclaratorAst1;
    delete lRoundAst2;
    delete rRoundAst3;
}

void DirectAbstractDeclarator9::Dump(int depth) {
    std::cout << "[" << depth << "] " << "DirectAbstractDeclarator9" << std::endl;
    directAbstractDeclaratorAst1->Dump(depth + 1);
    lRoundAst2->Dump(depth + 1);
    parameterTypeListAst3->Dump(depth + 1);
    rRoundAst4->Dump(depth + 1);
}

DirectAbstractDeclarator9::~DirectAbstractDeclarator9() {
    delete directAbstractDeclaratorAst1;
    delete lRoundAst2;
    delete parameterTypeListAst3;
    delete rRoundAst4;
}
