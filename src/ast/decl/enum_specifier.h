// Generated by buildSrc/GenerateAST.py
#ifndef _ENUM_SPECIFIER_H_
#define _ENUM_SPECIFIER_H_

//#include "ast/ast.h"
class Enum;
class EnumeratorList;
class Identifier;
class LCurly;
class RCurly;

class EnumSpecifier: public BasicAST {
public:
    virtual ~EnumSpecifier() {}
    virtual IRValuePtr GenerateIR(Context& context) { return nullptr; }
    virtual void Dump(int depth) {}
};

class EnumSpecifier1: public EnumSpecifier {
public:
    Enum* enumAst1;
    LCurly* lCurlyAst2;
    EnumeratorList* enumeratorListAst3;
    RCurly* rCurlyAst4;

    EnumSpecifier1(
        Enum* enumAst1,
        LCurly* lCurlyAst2,
        EnumeratorList* enumeratorListAst3,
        RCurly* rCurlyAst4
    ): enumAst1(enumAst1), lCurlyAst2(lCurlyAst2), enumeratorListAst3(enumeratorListAst3), rCurlyAst4(rCurlyAst4) {}

    virtual ~EnumSpecifier1();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class EnumSpecifier2: public EnumSpecifier {
public:
    Enum* enumAst1;
    Identifier* identifierAst2;
    LCurly* lCurlyAst3;
    EnumeratorList* enumeratorListAst4;
    RCurly* rCurlyAst5;

    EnumSpecifier2(
        Enum* enumAst1,
        Identifier* identifierAst2,
        LCurly* lCurlyAst3,
        EnumeratorList* enumeratorListAst4,
        RCurly* rCurlyAst5
    ): enumAst1(enumAst1), identifierAst2(identifierAst2), lCurlyAst3(lCurlyAst3), enumeratorListAst4(enumeratorListAst4), rCurlyAst5(rCurlyAst5) {}

    virtual ~EnumSpecifier2();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class EnumSpecifier3: public EnumSpecifier {
public:
    Enum* enumAst1;
    Identifier* identifierAst2;

    EnumSpecifier3(
        Enum* enumAst1,
        Identifier* identifierAst2
    ): enumAst1(enumAst1), identifierAst2(identifierAst2) {}

    virtual ~EnumSpecifier3();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

#endif // _ENUM_SPECIFIER_H_
