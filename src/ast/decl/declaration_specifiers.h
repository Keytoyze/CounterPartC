// Generated by buildSrc/GenerateAST.py
#ifndef _DECLARATION_SPECIFIERS_H_
#define _DECLARATION_SPECIFIERS_H_

//#include "ast/ast.h"
class StorageClassSpecifier;
class TypeQualifier;
class TypeSpecifier;

class DeclarationSpecifiers: public BasicAST {
public:
    virtual ~DeclarationSpecifiers() {}
    virtual IRValuePtr GenerateIR(Context& context) { return nullptr; }
    virtual void Dump(int depth) {}
};

class DeclarationSpecifiers1: public DeclarationSpecifiers {
public:
    StorageClassSpecifier* storageClassSpecifierAst1;

    DeclarationSpecifiers1(
        StorageClassSpecifier* storageClassSpecifierAst1
    ): storageClassSpecifierAst1(storageClassSpecifierAst1) {}

    virtual ~DeclarationSpecifiers1();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class DeclarationSpecifiers2: public DeclarationSpecifiers {
public:
    StorageClassSpecifier* storageClassSpecifierAst1;
    DeclarationSpecifiers* declarationSpecifiersAst2;

    DeclarationSpecifiers2(
        StorageClassSpecifier* storageClassSpecifierAst1,
        DeclarationSpecifiers* declarationSpecifiersAst2
    ): storageClassSpecifierAst1(storageClassSpecifierAst1), declarationSpecifiersAst2(declarationSpecifiersAst2) {}

    virtual ~DeclarationSpecifiers2();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class DeclarationSpecifiers3: public DeclarationSpecifiers {
public:
    TypeSpecifier* typeSpecifierAst1;

    DeclarationSpecifiers3(
        TypeSpecifier* typeSpecifierAst1
    ): typeSpecifierAst1(typeSpecifierAst1) {}

    virtual ~DeclarationSpecifiers3();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class DeclarationSpecifiers4: public DeclarationSpecifiers {
public:
    TypeSpecifier* typeSpecifierAst1;
    DeclarationSpecifiers* declarationSpecifiersAst2;

    DeclarationSpecifiers4(
        TypeSpecifier* typeSpecifierAst1,
        DeclarationSpecifiers* declarationSpecifiersAst2
    ): typeSpecifierAst1(typeSpecifierAst1), declarationSpecifiersAst2(declarationSpecifiersAst2) {}

    virtual ~DeclarationSpecifiers4();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class DeclarationSpecifiers5: public DeclarationSpecifiers {
public:
    TypeQualifier* typeQualifierAst1;

    DeclarationSpecifiers5(
        TypeQualifier* typeQualifierAst1
    ): typeQualifierAst1(typeQualifierAst1) {}

    virtual ~DeclarationSpecifiers5();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

class DeclarationSpecifiers6: public DeclarationSpecifiers {
public:
    TypeQualifier* typeQualifierAst1;
    DeclarationSpecifiers* declarationSpecifiersAst2;

    DeclarationSpecifiers6(
        TypeQualifier* typeQualifierAst1,
        DeclarationSpecifiers* declarationSpecifiersAst2
    ): typeQualifierAst1(typeQualifierAst1), declarationSpecifiersAst2(declarationSpecifiersAst2) {}

    virtual ~DeclarationSpecifiers6();
    virtual IRValuePtr GenerateIR(Context& context);
    virtual void Dump(int depth);

};

#endif // _DECLARATION_SPECIFIERS_H_
