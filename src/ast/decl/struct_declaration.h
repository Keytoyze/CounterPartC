// Generated by buildSrc/GenerateAST.py
#ifndef _STRUCT_DECLARATION_H_
#define _STRUCT_DECLARATION_H_

#include "ast/ast.h"
//#header

class StructDeclaration: public BasicAST {
public:
    virtual ~StructDeclaration() {}
    virtual void GenerateIR(Context& context) {}
    virtual void Dump(int depth) {}
};

class StructDeclaration1: public StructDeclaration {
public:
    SpecifierQualifierList* specifierQualifierListAst1;
    StructDeclaratorList* structDeclaratorListAst2;
    SimicolonSingle* simicolonSingleAst3;

    StructDeclaration1(
        SpecifierQualifierList* specifierQualifierListAst1,
        StructDeclaratorList* structDeclaratorListAst2,
        SimicolonSingle* simicolonSingleAst3
    ): specifierQualifierListAst1(specifierQualifierListAst1), structDeclaratorListAst2(structDeclaratorListAst2), simicolonSingleAst3(simicolonSingleAst3) {}

    virtual ~StructDeclaration1();
    virtual void GenerateIR(Context& context);
    virtual void Dump(int depth);

};


#else

#ifndef _CLASS_SPECIFIERQUALIFIERLIST_
#define _CLASS_SPECIFIERQUALIFIERLIST_
class SpecifierQualifierList;
#endif //_CLASS_SPECIFIERQUALIFIERLIST_
#ifndef _CLASS_STRUCTDECLARATORLIST_
#define _CLASS_STRUCTDECLARATORLIST_
class StructDeclaratorList;
#endif //_CLASS_STRUCTDECLARATORLIST_
#ifndef _CLASS_SIMICOLONSINGLE_
#define _CLASS_SIMICOLONSINGLE_
class SimicolonSingle;
#endif //_CLASS_SIMICOLONSINGLE_

#endif // _STRUCT_DECLARATION_H_
