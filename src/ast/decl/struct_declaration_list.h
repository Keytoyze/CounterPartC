// Generated by buildSrc/GenerateAST.py
#ifndef _STRUCT_DECLARATION_LIST_H_
#define _STRUCT_DECLARATION_LIST_H_

#include "ast/ast.h"
//#header

class StructDeclarationList: public BasicAST {
public:
    virtual ~StructDeclarationList() {}
    virtual void GenerateIR(Context context) {}
    virtual void Dump(int depth) {}
};

class StructDeclarationList1: public StructDeclarationList {
public:
    StructDeclaration* structDeclarationAst1;

    StructDeclarationList1(
        StructDeclaration* structDeclarationAst1
    ): structDeclarationAst1(structDeclarationAst1) {}

    virtual ~StructDeclarationList1();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};

class StructDeclarationList2: public StructDeclarationList {
public:
    StructDeclarationList* structDeclarationListAst1;
    StructDeclaration* structDeclarationAst2;

    StructDeclarationList2(
        StructDeclarationList* structDeclarationListAst1,
        StructDeclaration* structDeclarationAst2
    ): structDeclarationListAst1(structDeclarationListAst1), structDeclarationAst2(structDeclarationAst2) {}

    virtual ~StructDeclarationList2();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};


#else

#ifndef _CLASS_STRUCTDECLARATION_
#define _CLASS_STRUCTDECLARATION_
class StructDeclaration;
#endif //_CLASS_STRUCTDECLARATION_

#endif // _STRUCT_DECLARATION_LIST_H_
