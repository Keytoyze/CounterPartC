// Generated by buildSrc/GenerateAST.py
#include <iostream>
#include "ast/ast.h"
#include "ast/render.h"

void DeclarationSpecifiers1::Dump(int depth) {
    TreeRender::push("DeclarationSpecifiers");
    storageClassSpecifierAst1->Dump(depth + 1);
    TreeRender::pop();
}

DeclarationSpecifiers1::~DeclarationSpecifiers1() {
    delete storageClassSpecifierAst1;
}

void DeclarationSpecifiers2::Dump(int depth) {
    TreeRender::push("DeclarationSpecifiers");
    storageClassSpecifierAst1->Dump(depth + 1);
    declarationSpecifiersAst2->Dump(depth + 1);
    TreeRender::pop();
}

DeclarationSpecifiers2::~DeclarationSpecifiers2() {
    delete storageClassSpecifierAst1;
    delete declarationSpecifiersAst2;
}

void DeclarationSpecifiers3::Dump(int depth) {
    TreeRender::push("DeclarationSpecifiers");
    typeSpecifierAst1->Dump(depth + 1);
    TreeRender::pop();
}

DeclarationSpecifiers3::~DeclarationSpecifiers3() {
    delete typeSpecifierAst1;
}

void DeclarationSpecifiers4::Dump(int depth) {
    TreeRender::push("DeclarationSpecifiers");
    typeSpecifierAst1->Dump(depth + 1);
    declarationSpecifiersAst2->Dump(depth + 1);
    TreeRender::pop();
}

DeclarationSpecifiers4::~DeclarationSpecifiers4() {
    delete typeSpecifierAst1;
    delete declarationSpecifiersAst2;
}

void DeclarationSpecifiers5::Dump(int depth) {
    TreeRender::push("DeclarationSpecifiers");
    typeQualifierAst1->Dump(depth + 1);
    TreeRender::pop();
}

DeclarationSpecifiers5::~DeclarationSpecifiers5() {
    delete typeQualifierAst1;
}

void DeclarationSpecifiers6::Dump(int depth) {
    TreeRender::push("DeclarationSpecifiers");
    typeQualifierAst1->Dump(depth + 1);
    declarationSpecifiersAst2->Dump(depth + 1);
    TreeRender::pop();
}

DeclarationSpecifiers6::~DeclarationSpecifiers6() {
    delete typeQualifierAst1;
    delete declarationSpecifiersAst2;
}
