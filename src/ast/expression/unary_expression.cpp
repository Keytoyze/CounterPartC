// Generated by buildSrc/GenerateAST.py
#include <iostream>
#include "ast/expression/unary_expression.h"

void UnaryExpression1::Dump(int depth) {
    std::cout << "[" << depth << "] " << "UnaryExpression1" << std::endl;
    postfixExpressionAst1->Dump(depth + 1);
}

UnaryExpression1::~UnaryExpression1() {
    delete postfixExpressionAst1;
}

void UnaryExpression2::Dump(int depth) {
    std::cout << "[" << depth << "] " << "UnaryExpression2" << std::endl;
    incOpAst1->Dump(depth + 1);
    unaryExpressionAst2->Dump(depth + 1);
}

UnaryExpression2::~UnaryExpression2() {
    delete incOpAst1;
    delete unaryExpressionAst2;
}

void UnaryExpression3::Dump(int depth) {
    std::cout << "[" << depth << "] " << "UnaryExpression3" << std::endl;
    decOpAst1->Dump(depth + 1);
    unaryExpressionAst2->Dump(depth + 1);
}

UnaryExpression3::~UnaryExpression3() {
    delete decOpAst1;
    delete unaryExpressionAst2;
}

void UnaryExpression4::Dump(int depth) {
    std::cout << "[" << depth << "] " << "UnaryExpression4" << std::endl;
    unaryOperatorAst1->Dump(depth + 1);
    castExpressionAst2->Dump(depth + 1);
}

UnaryExpression4::~UnaryExpression4() {
    delete unaryOperatorAst1;
    delete castExpressionAst2;
}

void UnaryExpression5::Dump(int depth) {
    std::cout << "[" << depth << "] " << "UnaryExpression5" << std::endl;
    sizeofAst1->Dump(depth + 1);
    unaryExpressionAst2->Dump(depth + 1);
}

UnaryExpression5::~UnaryExpression5() {
    delete sizeofAst1;
    delete unaryExpressionAst2;
}

void UnaryExpression6::Dump(int depth) {
    std::cout << "[" << depth << "] " << "UnaryExpression6" << std::endl;
    sizeofAst1->Dump(depth + 1);
    lRoundAst2->Dump(depth + 1);
    typeNameAst3->Dump(depth + 1);
    rRoundAst4->Dump(depth + 1);
}

UnaryExpression6::~UnaryExpression6() {
    delete sizeofAst1;
    delete lRoundAst2;
    delete typeNameAst3;
    delete rRoundAst4;
}
