// Generated by buildSrc/GenerateAST.py
#ifndef _EQUALITY_EXPRESSION_H_
#define _EQUALITY_EXPRESSION_H_

#include "ast/ast.h"
//#header

class EqualityExpression: public BasicAST {
public:
    virtual ~EqualityExpression() {}
    virtual void GenerateIR(Context context) {}
    virtual void Dump(int depth) {}
};

class EqualityExpression1: public EqualityExpression {
public:
    RelationalExpression* relationalExpressionAst1;

    EqualityExpression1(
        RelationalExpression* relationalExpressionAst1
    ): relationalExpressionAst1(relationalExpressionAst1) {}

    virtual ~EqualityExpression1();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};

class EqualityExpression2: public EqualityExpression {
public:
    EqualityExpression* equalityExpressionAst1;
    EqOp* eqOpAst2;
    RelationalExpression* relationalExpressionAst3;

    EqualityExpression2(
        EqualityExpression* equalityExpressionAst1,
        EqOp* eqOpAst2,
        RelationalExpression* relationalExpressionAst3
    ): equalityExpressionAst1(equalityExpressionAst1), eqOpAst2(eqOpAst2), relationalExpressionAst3(relationalExpressionAst3) {}

    virtual ~EqualityExpression2();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};

class EqualityExpression3: public EqualityExpression {
public:
    EqualityExpression* equalityExpressionAst1;
    NeOp* neOpAst2;
    RelationalExpression* relationalExpressionAst3;

    EqualityExpression3(
        EqualityExpression* equalityExpressionAst1,
        NeOp* neOpAst2,
        RelationalExpression* relationalExpressionAst3
    ): equalityExpressionAst1(equalityExpressionAst1), neOpAst2(neOpAst2), relationalExpressionAst3(relationalExpressionAst3) {}

    virtual ~EqualityExpression3();
    virtual void GenerateIR(Context context);
    virtual void Dump(int depth);

};


#else

#ifndef _CLASS_NEOP_
#define _CLASS_NEOP_
class NeOp;
#endif //_CLASS_NEOP_
#ifndef _CLASS_EQOP_
#define _CLASS_EQOP_
class EqOp;
#endif //_CLASS_EQOP_
#ifndef _CLASS_RELATIONALEXPRESSION_
#define _CLASS_RELATIONALEXPRESSION_
class RelationalExpression;
#endif //_CLASS_RELATIONALEXPRESSION_

#endif // _EQUALITY_EXPRESSION_H_
